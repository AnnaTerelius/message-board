{
  "{\"sourceRoot\":\"/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend\",\"filename\":\"/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend",
      "filename": "/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _bcryptNodejs = _interopRequireDefault(require(\"bcrypt-nodejs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/*Mock API: \r\n \r\nGET /messages Response: { result: [{ id: number, message: string, \r\nauthor: number, \r\n}] \r\n} \r\n \r\nPOST /messages Request: { message: string, author: number, } Response: 204 \r\n \r\nPUT /messages/{id} Request: { message: string } Response: 204 \r\n \r\nDELETE /messages/{id} Response: 204 */\nvar mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/message-board\";\n\n_mongoose.default.connect(mongoUrl, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\n_mongoose.default.Promise = Promise;\n\nvar Message = _mongoose.default.model(\"Message\", {\n  id: {\n    type: Date,\n    default: Date.now\n  },\n  author: {\n    type: String\n  },\n  message: {\n    type: String,\n    required: true,\n    minlength: 5,\n    maxlength: 140\n  }\n});\n\nvar User = _mongoose.default.model(\"User\", {\n  userName: {\n    type: String,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  accessToken: {\n    type: String,\n    default: function _default() {\n      return _crypto.default.randomBytes(128).toString('hex');\n    }\n  }\n}); // User ================================\n// name       password      accessToken     _id\n//  Anna      sdfsfsdfa     asdfasfasd      1111111111\n//  Fredrik   bbbbbb a      bbbbbbbbb       2222222222\n// Messages ==========================\n// message      author              _id\n//  Hej         1111111111          1231231231231\n//  Hej igen    1111111111          2222222222222\n\n\nMessage.deleteMany().then(function () {\n  new Message({\n    id: 1,\n    message: 'Watch video on actions & reducers',\n    author: 11\n  }).save();\n  new Message({\n    id: 2,\n    message: 'Follow redux codealong',\n    author: 12\n  }).save();\n  new Message({\n    id: 3,\n    message: 'Fork weekly assignment',\n    author: 13\n  }).save();\n  new Message({\n    id: 4,\n    message: 'Create a todo app',\n    author: 14\n  }).save();\n});\nUser.deleteMany().then(function () {\n  new User({\n    userName: \"Anna\",\n    password: _bcryptNodejs.default.hashSync(\"HollyDahlia\")\n  }).save();\n  new User({\n    userName: \"Holly\",\n    password: _bcryptNodejs.default.hashSync(\"Kurry\")\n  }).save();\n  new User({\n    userName: \"Fredrik\",\n    password: _bcryptNodejs.default.hashSync(\"Hjälmunge\")\n  }).save();\n});\nconsole.log(_bcryptNodejs.default.hashSync(\"HollyDahlia\"));\nvar port = process.env.PORT || 8000;\nvar app = (0, _express.default)(); // Add middlewares to enable cors and json body parsing\n\napp.use((0, _cors.default)());\napp.use(_bodyParser.default.json()); //catches if there are any dabase errors, if not continue to queries\n\nvar authenticateUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(req.header(\"Authorization\"));\n            _context.next = 4;\n            return User.findOne({\n              accessToken: req.header(\"Authorization\")\n            });\n\n          case 4:\n            user = _context.sent;\n\n            if (user) {\n              console.log(\"authenricateUser successful\");\n              req.user = user;\n              next();\n            } else {\n              res.status(401).json({\n                loggedOut: true\n              });\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(403).json({\n              message: 'access token missing or wrong',\n              errors: _context.t0.errors\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function authenticateUser(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Start defining routes here\n\n/*app.get(\"/\",  (req, res) => {\r\n    res.send(\"hello world\")\r\n    })*/\n\n/*// SECRET ROUTE (Welcome page)\r\napp.get('/users/:userId', authenticateUser)\r\napp.get('/users/:userId', (req, res) => {\r\n  res.json({ name: req.user.name })\r\n})*/\n\n\napp.get(\"/messages\", authenticateUser);\napp.get(\"/messages\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var message;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return Message.find();\n\n          case 2:\n            message = _context2.sent;\n            res.send(message); //res.json({secret: \"hello\"})\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get(\"/users\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return User.find();\n\n          case 2:\n            user = _context3.sent;\n            res.send(user);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref3.apply(this, arguments);\n  };\n}()); //to register new user\n\napp.post(\"/users\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body, userName, password, user;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            try {\n              _req$body = req.body, userName = _req$body.userName, password = _req$body.password;\n              user = new User({\n                userName: userName,\n                password: _bcryptNodejs.default.hashSync(password)\n              });\n              user.save();\n              res.status(201).json({\n                id: user._id,\n                accessToken: user.accessToken\n              });\n            } catch (err) {\n              res.status(400).json({\n                message: \"Could not create user\",\n                errors: err.errors\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post(\"/messages\", authenticateUser);\napp.post(\"/messages\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var newMessage;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            //this will only happen if the user is Authenticated(if the next function is called)\n            //get the info send by user to our API endpoint\n            newMessage = new Message({\n              id: req.body.id,\n              author: req.body.author,\n              message: req.body.message\n            }); //use our mongoose model to create database entry\n\n            _context5.next = 3;\n            return newMessage.save();\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref5.apply(this, arguments);\n  };\n}()); //to log in user\n\napp.post(\"/sessions\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var user;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            console.log(req.body); //const {userName, password} = req.body;\n\n            _context6.next = 4;\n            return User.findOne({\n              userName: req.body.userName\n            });\n\n          case 4:\n            user = _context6.sent;\n\n            if (user && _bcryptNodejs.default.compareSync(req.body.password, user.password)) {\n              //succes\n              res.status(201).json({\n                userId: user._id,\n                accessToken: user.accessToken\n              });\n            } else {\n              //failure: user does not exist or the encrypted password does not match\n              res.json({\n                notFound: true\n              });\n            }\n\n            _context6.next = 11;\n            break;\n\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](0);\n            res.status(400).json({\n              message: 'could not find user',\n              errors: _context6.t0.errors\n            });\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 8]]);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref6.apply(this, arguments);\n  };\n}());\n/*app.post('/sessions', async (req, res) => {\r\n  try {\r\n    const { email, password } = req.body\r\n    const user = await User.findOne({ email })\r\n    if (user && bcrypt.compareSync(password, user.password)) {\r\n      res.status(201).json({ userId: user._id, accessToken: user.accessToken })\r\n    } else {\r\n      res.json({ message: 'User not found' })\r\n    }\r\n  } catch (err) {\r\n    res.status(400).json({ message: 'could not find user', errors: err.errors })\r\n  }\r\n})*/\n//to delete post \n\napp.delete(\"/messages/:id\", /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return Message.deleteOne({\n              _id: req.params.id\n            });\n\n          case 3:\n            res.status(204).send();\n            _context7.next = 9;\n            break;\n\n          case 6:\n            _context7.prev = 6;\n            _context7.t0 = _context7[\"catch\"](0);\n            res.status(404).json({\n              error: 'Message does not exist'\n            });\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 6]]);\n  }));\n\n  return function (_x14, _x15) {\n    return _ref7.apply(this, arguments);\n  };\n}()); //to update message\n\napp.put(\"/messages/:id\", authenticateUser);\napp.put(\"/messages/:id\", /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var message;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return Message.findOne({\n              _id: req.params.id,\n              author: req.user._id\n            });\n\n          case 3:\n            message = _context8.sent;\n\n            if (req.body.message) {\n              message.message = req.body.message;\n            }\n\n            _context8.next = 7;\n            return message.save();\n\n          case 7:\n            res.send(message);\n            _context8.next = 14;\n            break;\n\n          case 10:\n            _context8.prev = 10;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(404);\n            res.send({\n              error: \"Message doesn't exist or you don't have access!\"\n            });\n\n          case 14:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 10]]);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref8.apply(this, arguments);\n  };\n}()); // Start the server\n\napp.listen(port, function () {\n  console.log(\"Server running on http://localhost:\".concat(port));\n}); //app.listen(8000, () => console.log('app listening on port 8000'))\n//console.log(\"hello world\")\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "mongoUrl",
        "process",
        "env",
        "MONGO_URL",
        "mongoose",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "Promise",
        "Message",
        "model",
        "id",
        "type",
        "Date",
        "default",
        "now",
        "author",
        "String",
        "message",
        "required",
        "minlength",
        "maxlength",
        "User",
        "userName",
        "unique",
        "password",
        "accessToken",
        "crypto",
        "randomBytes",
        "toString",
        "deleteMany",
        "then",
        "save",
        "bcrypt",
        "hashSync",
        "console",
        "log",
        "port",
        "PORT",
        "app",
        "use",
        "bodyParser",
        "json",
        "authenticateUser",
        "req",
        "res",
        "next",
        "header",
        "findOne",
        "user",
        "status",
        "loggedOut",
        "errors",
        "get",
        "find",
        "send",
        "post",
        "body",
        "_id",
        "err",
        "newMessage",
        "compareSync",
        "userId",
        "notFound",
        "delete",
        "deleteOne",
        "params",
        "error",
        "put",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/mnt/c/Users/terel/OneDrive/Skrivbord/technigo/message-board/backend/",
      "sourcesContent": [
        "import express from \"express\"\r\nimport bodyParser from 'body-parser'\r\nimport cors from 'cors'\r\nimport mongoose from 'mongoose'\r\nimport crypto from 'crypto'\r\nimport bcrypt from 'bcrypt-nodejs'\r\n/*Mock API: \r\n \r\nGET /messages Response: { result: [{ id: number, message: string, \r\nauthor: number, \r\n}] \r\n} \r\n \r\nPOST /messages Request: { message: string, author: number, } Response: 204 \r\n \r\nPUT /messages/{id} Request: { message: string } Response: 204 \r\n \r\nDELETE /messages/{id} Response: 204 */\r\n\r\nconst mongoUrl = process.env.MONGO_URL || \"mongodb://localhost/message-board\"\r\nmongoose.connect(mongoUrl, { useNewUrlParser: true, useUnifiedTopology: true })\r\nmongoose.Promise = Promise\r\n\r\nconst Message = mongoose.model(\"Message\", {\r\n    id: { \r\n      type: Date,\r\n      default: Date.now\r\n    },\r\n    author: {\r\n      type: String,\r\n    },\r\n    message: {\r\n      type: String,\r\n      required: true,\r\n      minlength: 5,\r\n      maxlength: 140\r\n    }\r\n    \r\n})\r\n\r\nconst User = mongoose.model(\"User\", {\r\n  userName: {\r\n    type: String,\r\n    unique: true,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  accessToken: {\r\n    type: String,\r\n    default: () => crypto.randomBytes(128).toString('hex'),\r\n  },\r\n})\r\n\r\n// User ================================\r\n// name       password      accessToken     _id\r\n//  Anna      sdfsfsdfa     asdfasfasd      1111111111\r\n//  Fredrik   bbbbbb a      bbbbbbbbb       2222222222\r\n\r\n// Messages ==========================\r\n// message      author              _id\r\n//  Hej         1111111111          1231231231231\r\n//  Hej igen    1111111111          2222222222222\r\n\r\nMessage.deleteMany().then(() => {\r\n    new Message({id: 1, message: 'Watch video on actions & reducers', author: 11 }).save();\r\n    new Message({id: 2, message: 'Follow redux codealong', author: 12}).save();\r\n    new Message({id: 3, message: 'Fork weekly assignment', author: 13}).save();\r\n    new Message({id: 4, message: 'Create a todo app', author: 14}).save();\r\n})\r\n\r\nUser.deleteMany().then(() => {\r\n  new User({userName: \"Anna\", password: bcrypt.hashSync(\"HollyDahlia\") }).save();\r\n  new User({userName: \"Holly\", password: bcrypt.hashSync(\"Kurry\") }).save();\r\n  new User({userName: \"Fredrik\", password: bcrypt.hashSync(\"Hjälmunge\") }).save();\r\n \r\n})\r\nconsole.log(bcrypt.hashSync(\"HollyDahlia\"))\r\n\r\nconst port = process.env.PORT || 8000\r\nconst app = express()\r\n\r\n// Add middlewares to enable cors and json body parsing\r\napp.use(cors())\r\napp.use(bodyParser.json())\r\n//catches if there are any dabase errors, if not continue to queries\r\n\r\nconst authenticateUser = async (req, res, next) => {\r\n  try { \r\n    console.log(req.header(\"Authorization\"))\r\n  const user = await User.findOne({accessToken: req.header(\"Authorization\")});\r\n  if (user) {\r\n    \r\n    console.log(\"authenricateUser successful\")\r\n    req.user = user;\r\n    next();\r\n  } else {\r\n    res.status(401).json({loggedOut: true})\r\n  }\r\n} catch (err) {\r\n  res\r\n    .status(403)\r\n    .json({ message: 'access token missing or wrong', errors: err.errors })\r\n}\r\n}\r\n\r\n// Start defining routes here\r\n/*app.get(\"/\",  (req, res) => {\r\n    res.send(\"hello world\")\r\n    })*/\r\n\r\n/*// SECRET ROUTE (Welcome page)\r\napp.get('/users/:userId', authenticateUser)\r\napp.get('/users/:userId', (req, res) => {\r\n  res.json({ name: req.user.name })\r\n})*/\r\n\r\napp.get(\"/messages\", authenticateUser);\r\napp.get(\"/messages\", async (req, res) => {\r\n const message = await Message.find();\r\n res.send(message);\r\n //res.json({secret: \"hello\"})\r\n});\r\n\r\napp.get(\"/users\", async (req, res) => {\r\n  const user = await User.find();\r\n  res.send(user);\r\n });\r\n\r\n //to register new user\r\n app.post(\"/users\", async (req, res) => {\r\n   try {\r\n    const {userName, password} = req.body;\r\n    const user = new User({userName: userName, password: bcrypt.hashSync(password)});\r\n    user.save();\r\n    res.status(201).json({id: user._id, accessToken: user.accessToken})\r\n   } catch (err) {\r\n     res.status(400).json({message: \"Could not create user\", errors: err.errors})\r\n   }\r\n })\r\n\r\n\r\napp.post(\"/messages\", authenticateUser);\r\napp.post(\"/messages\", async (req, res) => {\r\n  //this will only happen if the user is Authenticated(if the next function is called)\r\n    //get the info send by user to our API endpoint\r\n    const newMessage = new Message({\r\n      id: req.body.id,\r\n      author: req.body.author,\r\n      message:req.body.message,\r\n    });\r\n\r\n    //use our mongoose model to create database entry\r\n    await newMessage.save();\r\n  })\r\n\r\n  //to log in user\r\napp.post(\"/sessions\", async (req, res) => {\r\n  try { \r\n    console.log(req.body)\r\n \r\n    //const {userName, password} = req.body;\r\n    const user = await User.findOne({userName: req.body.userName})\r\n      if(user && bcrypt.compareSync(req.body.password, user.password)) {\r\n      //succes\r\n      res.status(201).json({userId: user._id, accessToken: user.accessToken})\r\n  } else {\r\n    //failure: user does not exist or the encrypted password does not match\r\n    res.json({notFound: true})\r\n  } \r\n} catch (err) {\r\n  res.status(400).json({ message: 'could not find user', errors: err.errors })\r\n}\r\n  \r\n})\r\n\r\n\r\n\r\n/*app.post('/sessions', async (req, res) => {\r\n  try {\r\n    const { email, password } = req.body\r\n    const user = await User.findOne({ email })\r\n    if (user && bcrypt.compareSync(password, user.password)) {\r\n      res.status(201).json({ userId: user._id, accessToken: user.accessToken })\r\n    } else {\r\n      res.json({ message: 'User not found' })\r\n    }\r\n  } catch (err) {\r\n    res.status(400).json({ message: 'could not find user', errors: err.errors })\r\n  }\r\n})*/\r\n\r\n  //to delete post \r\n  app.delete(\"/messages/:id\", async (req, res) => {\r\n    try {\r\n      await Message.deleteOne({ _id: req.params.id });\r\n      res.status(204).send();\r\n    } catch {\r\n      res.status(404).json({ error: 'Message does not exist' });\r\n    }\r\n  });\r\n\r\n  //to update message\r\n  app.put(\"/messages/:id\", authenticateUser);\r\n  app.put(\"/messages/:id\", async (req, res) => {\r\n    try {\r\n      const message = await Message.findOne({ _id: req.params.id, author: req.user._id })\r\n  \r\n      if (req.body.message) {\r\n        message.message = req.body.message\r\n      }\r\n  \r\n      await message.save()\r\n      res.send(message)\r\n      \r\n    } catch {\r\n      res.status(404)\r\n      res.send({ error: \"Message doesn't exist or you don't have access!\" })\r\n    }\r\n  })\r\n  \r\n// Start the server\r\napp.listen(port, () => {\r\n    console.log(`Server running on http://localhost:${port}`)\r\n  })\r\n\r\n//app.listen(8000, () => console.log('app listening on port 8000'))\r\n\r\n//console.log(\"hello world\")"
      ]
    },
    "sourceType": "script",
    "mtime": 1591381768110
  }
}